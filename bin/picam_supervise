#!/bin/bash
#set -o nounset
source /etc/picam.conf
SCRIPTNAME=(basename $0)
USER=$(id -u -n)
SERVICE_MOTION=/usr/bin/service motion

##################
# system functions
##################

function echo_v(){
    # print if VERBOSE == 1
    set +u
    [ -z $VERBOSE ] && return 0
    set -u
    if [ "$VERBOSE" -eq 0 ]; then
        echo "> ($USER): [$0] $*"
    fi
}

function echo_vv(){
    # print if VERBOSE == 2
    set +u
    [ -z $VERBOSE ] && return 0
    set -u
    if [ "$VERBOSE" -eq 2 ]; then
        echo ">> ($USER): [$0] $*"
    fi
}

function echo_vvv(){
    # print if VERBOSE > 2
    set +u
    [ -z $VERBOSE ] && return 0
    set -u
    if [ "$VERBOSE" -gt 2 ]; then
        echo ">>>($USER): [$0] $*"
    fi
}



#################
# query functions
#################

is_secured() {
    # determine if friendly presence is here
    echo_vvv "is_secured($*)"
    if [ -z "$CHECK_ZONE_CMD" ]; then
        echo "The variable \$CHECK_ZONE_CMD is unset. Please configue /etc/picam.conf."
        echo "Considering zone unsecure."
        return 1
    fi
    eval $CHECK_ZONE_CMD
    r=$?
    echo_vv "The check secure zone command \"${CHECK_ZONE_CMD}\" returned code $r"
    return $r
}

control() {
    echo_vvv "control($*)"
    # controls motion based on presence
    is_secured
    code1=$?
    TMPFILE="/tmp/${SCRIPTNAME}-${$}-control.tmp"
    status=$(motion_control status)
    code2=$?

    if [[ "$code1" == "0" ]] && [[ "$code2" == "0" ]]; then
        echo_vv "There is presence and motion is active ($status); then pause it"
        motion_control pause
    elif [[ $code1 != "0" ]] && [ "$code2" == "1" ]; then
        echo_vv "There is nobody and motion is not active ($status), then start it"
        motion_control start
    elif [[ $code2 == "2" ]]; then
        echo "Motion is in status $status. Sending warning."
        echo "Motion is in status $status. This is a warning." > $TMPFILE
        picam_notify --message $TMPFILE --subject "[motion] Warning. Unresponsive camera!"
        /bin/rm "$TMPFILE"
    elif [[ $code2 == "4" ]]; then
        echo "Motion seems stopped. Sending warning."
        echo "Motion seems stopped." > $TMPFILE
        echo "Stopping motion..." >> $TMPFILE 2>&1
        sudo $SERVICE_MOTION stop >> $TMPFILE 2>&1
        echo "Starting motion..." >> $TMPFILE 2>&1
        sudo $SERVICE_MOTION start >> $TMPFILE 2>&1
        picam_notify --message $TMPFILE --subject "[motion] Warning. Motion not running."
        /bin/rm "$TMPFILE"
    else
        echo_vvv "Keeping state $status"
    fi
}

display_help() {
    echo "$( basename $0 ) [--verbose] <action>

    where <action> can be one of the followings:

    fixme: option
    zone         check if the zone is secure
    control      search presence. enable if presence, disable if not"
}

function parse_arguments() {
    if [ -z $1 ]; then
        echo "Argument needed"
        display_help
        exit 127
    fi

    while [[ $1 ]]; do
        case "$1" in
            "presence")
                is_secured
                exit $?
                ;;
            "control")
                control
                exit $?
                ;;
            -v | --verbose)
                VERBOSE=2
                shift
                ;;
            -h | --help)
                display_help  # Call your function
                # no shifting needed here, we're done.
                exit 0
                ;;
            --) # End of all options
                shift
                break;
                ;;
            *)
                echo "Error: Unknown option: $1" >&2
                exit 1
                ;;
        esac
    done
}

function main() {
    parse_arguments $*
}

main $*
